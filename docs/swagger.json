{
    "swagger": "2.0",
    "info": {
        "description": "Go + Postgres + Chi Router + sqlx + Unit Testing starter kit for API development.",
        "title": "Go8",
        "contact": {
            "name": "Hafiz Shafruddin",
            "url": "https://github.com/gmhafiz/go8",
            "email": "gmhafiz@gmail.com"
        },
        "license": {},
        "version": "0.8.0"
    },
    "host": "localhost:3080",
    "basePath": "/",
    "paths": {
        "/api/v1/books": {
            "get": {
                "description": "Get all books. By default it gets first page with 10 items.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show all books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "term",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "term",
                        "name": "description",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/book.Res"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Get a book with JSON payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a Book",
                "parameters": [
                    {
                        "description": "Book Request",
                        "name": "Book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/book.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/book.Res"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/books/{bookID}": {
            "get": {
                "description": "Get a book by its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "book ID",
                        "name": "bookID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/book.Res"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a book by its model.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Book",
                "parameters": [
                    {
                        "description": "Book Request",
                        "name": "Book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/book.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/book.Res"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a book by its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a Book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health/liveness": {
            "get": {
                "description": "Hits this API to see if API is running in the server",
                "summary": "Checks if API is up",
                "responses": {
                    "200": {},
                    "500": {}
                }
            }
        },
        "/health/readiness": {
            "get": {
                "description": "Hits this API to see if both API and Database are running in the server",
                "summary": "Checks if both API and Database are up",
                "responses": {
                    "200": {},
                    "500": {}
                }
            }
        }
    },
    "definitions": {
        "book.Request": {
            "type": "object",
            "required": [
                "description",
                "published_date",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "disable_paging": {
                    "type": "boolean"
                },
                "image_url": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "published_date": {
                    "type": "string"
                },
                "search": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "book.Res": {
            "type": "object",
            "properties": {
                "book_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "published_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}