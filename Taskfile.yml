version: '3'

dotenv: ['.env']

tasks:
  list:
    desc: Lists available commands
    cmds:
      - task -l

  migrate-create:
    desc: Creates .sql migration files (Up and Down). Set name by appending with 'NAME={{name_of_file}}'
    cmds:
      - migrate create -ext sql -dir database/migrations -format unix "{{.NAME}}"

  migrate:
    desc: Migrates UP the database
    cmds:
      - migrate -path database/migrations up

  gen-orm:
    desc: Reads your current database schema and creates models as well as orm.
    cmds:
      - sqlboiler --wipe --add-soft-deletes psql

  run:
    desc: Runs the app
    cmds:
      - go run cmd/go8/main.go

  build:
    desc: Creates a compiled binary and copy configuration files
    cmds:
      - go mod download && CGO_ENABLED=0 GOOS=linux && go build -v -i cmd/go8/main.go
      - mkdir -p bin
      - mv go8 bin/
      - cp .env bin

  swagger:
    desc: Generates Swagger page for API reference
    cmds:
      - swag init -g cmd/go8/main.go

  docker-build:
    desc: Builds a Docker image
    cmds:
      - docker build -t go8/server -f Dockerfile .

  docker-run:
    desc: Runs the app Docker image as a Docker container
    cmds:
      - docker run -p 3080:3080 --rm -it --net=host --name go8container go8

  docker-compose-start:
    desc: Runs server and database using docker-compose
    cmds:
      - docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit

  docker-compose-stop:
    desc: Stops server and database using docker-compose
    cmds:
      - docker-compose -f docker-compose.test.yml down --volumes

  fmt:
    desc: Lint code
    cmds:
      - go fmt ./...

  tidy:
    desc: Downloads dependencies and removes unused ones
    cmds:
      - go mod tidy

  vet:
    desc: Vets code
    cmds:
      - go vet ./...

  golint:
    desc: Uses golangci-lint
    cmds:
      - golangci-lint run

  test:
    desc: Test all code
    cmds:
      - go test -v ./...

  stop-dockertest:
    desc: Stop hanging dockertest container
    cmds:
      - scripts/stopDockertestByPort.sh 5433